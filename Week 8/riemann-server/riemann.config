; -*- mode: clojure; -*-
; vim: filetype=clojure

(logging/init {:file "riemann.log"})

(def riemann-to-influxdb (
    influxdb {
        :version :0.9
        :host "192.168.100.129"
        :db "riemann_metrics"
        :port 8086
        :username "kiran"
        :password "kiran"
        :timeout 100000
    })
)

; Listen on the local interface over TCP (5555), UDP (5555), and websockets
; (5556)
(let [host "192.168.100.126"]
  (tcp-server {:host host})
  (udp-server {:host host})
  (ws-server  {:host host}))

; Expire old events from the index every 5 seconds.
(periodically-expire 5)

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 20
      ; Index all events immediately.
      index
      riemann-to-influxdb
      ; Log expired events.
      (expired
        (fn [event] (info "expired" event))
      )
      ; Log warning & critical events.
      (match :state #{"warning" "critical"} 
        (fn [event] (info "critical" event))
      )
    )
  )
)
